<%=
  render(border_box_container) do |component|
    component.with_header(color: :muted) do
      render(Primer::Beta::Text.new(font_weight: :semibold)) { I18n.t("activemodel.attributes.saml/provider.display_name") }
    end

    component.with_row(scheme: :default) do
      if edit_state == :name
        render(Saml::Providers::Sections::NameFormComponent.new(provider))
      else
        render(Saml::Providers::Sections::NameComponent.new(provider))
      end
    end


    component.with_row(scheme: :neutral, color: :muted) do
      render(Primer::Beta::Text.new(font_weight: :semibold)) { I18n.t('saml.providers.label_automatic_configuration') }
    end

    component.with_row(scheme: :default) do
      if edit_state == :metadata
        render(Saml::Providers::Sections::MetadataFormComponent.new(provider))
      else
        render(Saml::Providers::Sections::MetadataComponent.new(provider))
      end
    end
    #
    #   component.with_row(scheme: :default) do
    #     render(Storages::Admin::OAuthClientInfoComponent.new(oauth_client: storage.oauth_client, storage:))
    #   end
    #
    #   component.with_row(scheme: :neutral, color: :muted) do
    #     grid_layout('op-storage-view--row', tag: :div, align_items: :center) do |grid|
    #       grid.with_area(:item, tag: :div) do
    #         render(Primer::Beta::Text.new(font_weight: :semibold, mr: 1)) { I18n.t('storages.file_storage_view.project_folders') }
    #       end
    #     end
    #   end
    #
    #   component.with_row(scheme: :default) do
    #     if automatically_managed_project_folders_section_closed?
    #       render(Storages::Admin::AutomaticallyManagedProjectFoldersInfoComponent.new(storage))
    #     else
    #       render(Storages::Admin::Forms::AutomaticallyManagedProjectFoldersFormComponent.new(storage))
    #     end
    #   end
    # end
    #
    # if storage.provider_type_one_drive?
    #   component.with_row(scheme: :neutral, color: :muted) do
    #     grid_layout('op-storage-view--row', tag: :div, align_items: :center) do |grid|
    #       grid.with_area(:item, tag: :div, mr: 3) do
    #         render(Primer::Beta::Text.new(font_weight: :semibold, mr: 1)) { I18n.t('storages.file_storage_view.access_management.title') }
    #       end
    #     end
    #   end
    #
    #   component.with_row(scheme: :default) do
    #     render(Storages::Admin::AccessManagementComponent.new(storage))
    #   end
    #
    #   component.with_row(scheme: :neutral, color: :muted) do
    #     grid_layout('op-storage-view--row', tag: :div, align_items: :center) do |grid|
    #       grid.with_area(:item, tag: :div, mr: 3) do
    #         render(Primer::Beta::Text.new(font_weight: :semibold, mr: 1)) { I18n.t('storages.file_storage_view.oauth_applications') }
    #       end
    #     end
    #   end
    #
    #   component.with_row(scheme: :default) do
    #     render(Storages::Admin::OAuthClientInfoComponent.new(oauth_client: storage.oauth_client, storage:))
    #   end
    #
    #   component.with_row(scheme: :default) do
    #     render(Storages::Admin::RedirectUriComponent.new(oauth_client: storage.oauth_client, storage:))
    #   end
    # end
  end
%>
