<%=
  render(border_box_container) do |component|
    component.with_header(color: :muted) do
      render(Primer::Beta::Text.new(font_weight: :semibold)) { I18n.t("activemodel.attributes.saml/provider.display_name") }
    end

    component.with_row(scheme: :default) do
      if edit_state == :name
        render(Saml::Providers::Sections::NameFormComponent.new(provider))
      else
        render(Saml::Providers::Sections::NameComponent.new(provider))
      end
    end

    component.with_row(scheme: :neutral, color: :muted) do
      render(Primer::Beta::Text.new(font_weight: :semibold)) { I18n.t('saml.providers.label_automatic_configuration') }
    end

    component.with_row(scheme: :default) do
      if edit_state == :metadata
        render(Saml::Providers::Sections::MetadataFormComponent.new(provider))
      else
        render(Saml::Providers::Sections::MetadataComponent.new(provider))
      end
    end

    component.with_row(scheme: :neutral, color: :muted) do
      render(Primer::Beta::Text.new(font_weight: :semibold)) { I18n.t('saml.providers.section_headers.configuration') }
    end

    component.with_row(scheme: :default) do
      if edit_state == :configuration
        render(Saml::Providers::Sections::ConfigurationFormComponent.new(provider))
      else
        render(Saml::Providers::Sections::ConfigurationComponent.new(provider))
      end
    end

    component.with_row(scheme: :default) do
      if edit_state == :encryption
        render(Saml::Providers::Sections::EncryptionFormComponent.new(provider))
      else
        render(Saml::Providers::Sections::EncryptionComponent.new(provider))
      end
    end

    component.with_row(scheme: :neutral, color: :muted) do
      render(Primer::Beta::Text.new(font_weight: :semibold)) { I18n.t('saml.providers.section_headers.attributes') }
    end

    component.with_row(scheme: :default) do
      if edit_state == :mapping
        render(Saml::Providers::Sections::MappingFormComponent.new(provider))
      else
        render(Saml::Providers::Sections::MappingComponent.new(provider))
      end
    end
    component.with_row(scheme: :default) do
      if edit_state == :requested_attributes
        render(Saml::Providers::Sections::RequestAttributesFormComponent.new(provider))
      else
        render(Saml::Providers::Sections::RequestAttributesComponent.new(provider))
      end
    end
  end
%>
